// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ora.GameManaging.Server.Data;

#nullable disable

namespace Ora.GameManaging.Server.Data.Migrations
{
    [DbContext(typeof(GameDbContext))]
    [Migration("20250528124931_MakeUserIdUniqueInPlayer")]
    partial class MakeUserIdUniqueInPlayer
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ora.GameManaging.Server.Data.AppInstanceEntity", b =>
                {
                    b.Property<string>("AppId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Owner")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AppId");

                    b.ToTable("AppInstances");
                });

            modelBuilder.Entity("Ora.GameManaging.Server.Data.GameEventEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Data")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("GameRoomEntityId")
                        .HasColumnType("int");

                    b.Property<string>("PlayerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GameRoomEntityId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Ora.GameManaging.Server.Data.GameRoomEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AppId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrentTurnPlayers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsGameStarted")
                        .HasColumnType("bit");

                    b.Property<string>("LastSnapshotJson")
                        .HasMaxLength(8000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TurnDurationSeconds")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppId", "RoomId")
                        .IsUnique();

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Ora.GameManaging.Server.Data.PlayerEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConnectionId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("GameRoomEntityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastSeen")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Role")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("GameRoomEntityId");

                    b.HasIndex("UserId", "GameRoomEntityId")
                        .IsUnique();

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Ora.GameManaging.Server.Data.GameEventEntity", b =>
                {
                    b.HasOne("Ora.GameManaging.Server.Data.GameRoomEntity", "GameRoom")
                        .WithMany("Events")
                        .HasForeignKey("GameRoomEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameRoom");
                });

            modelBuilder.Entity("Ora.GameManaging.Server.Data.GameRoomEntity", b =>
                {
                    b.HasOne("Ora.GameManaging.Server.Data.AppInstanceEntity", "AppInstance")
                        .WithMany("Rooms")
                        .HasForeignKey("AppId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppInstance");
                });

            modelBuilder.Entity("Ora.GameManaging.Server.Data.PlayerEntity", b =>
                {
                    b.HasOne("Ora.GameManaging.Server.Data.GameRoomEntity", "GameRoom")
                        .WithMany("Players")
                        .HasForeignKey("GameRoomEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameRoom");
                });

            modelBuilder.Entity("Ora.GameManaging.Server.Data.AppInstanceEntity", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Ora.GameManaging.Server.Data.GameRoomEntity", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
